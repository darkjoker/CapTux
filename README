 ____                      ______                 
/\  _`\                   /\__  _\                
\ \ \/\_\     __     _____\/_/\ \/ __  __  __  _  
 \ \ \/_/_  /'__`\  /\ '__`\ \ \ \/\ \/\ \/\ \/'\ 
  \ \ \L\ \/\ \L\.\_\ \ \L\ \ \ \ \ \ \_\ \/>  </ 
   \ \____/\ \__/.\_\\ \ ,__/  \ \_\ \____//\_/\_\
    \/___/  \/__/\/_/ \ \ \/    \/_/\/___/ \//\/_/
                       \ \_\                      
                        \/_/                      

CaptchaTrader for Linux =) 
by darkjoker

Well, there's not much to say about this program, but I'll spend a few word
about it anyway.
For those who doesn't know what CaptchaTrader is, I suggest to visit the
website (the link is at the bottom of this file).
This program is developed to make it easier for capchatrader users to solve
captchas. A simple popup appears every time a new captcha is available, and
after you've solved it, the popup is closed. 
This is a far better way of solving captchas than from your browser.
CapTux, anyway, is very "raw": the popup isn't a fancy cool one with tons of
buttons and all that stuff, it just displays che captcha (represented in 256
colors, because otherwise it wouldn't have been raw enought :) and the input
so that you can fill it with the captcha value (and of course, the input is
as raw as the whole program). 
To exit the program you'll have to kill the process using a simple command

kill -QUIT pid

(the pid will be given when the program is executed).
Well, you may be wondering why on earth I have written such a raw program...
The answer is simple: I didn't want to create something too nagging, so I 
made it really "discreet", which means you won't have any window open when
there's no captcha available, and it's also possible to run the program with
the --hidden argument, which'll fork the process and leave the shell 
available.
The program has to be executed specifying username and password(or passkey),
otherwise it shows an error message.

$ ./main username password

Any error will be printed (unless the --hidden mode is ON), and if the error
is critical (wrong username/password) the program will exit immidiately.

To compile the program you'll need SDL and SDL_ttf libraries. Then run:

$ gcc -o main main.c -lSDL -lSDL_ttf

Now the 'main' executable file will be created.
You can launch CapTux from the current directory, or you can move it
to /usr/local/bin (you'll need to be root to do so):

# mv main /usr/local/bin/captux
# mv cour.ttf /usr/local/bin/cour.ttf

Now CapTux is available by launching:

$ captux username password

And that's all :) A new captcha will pop up sometime, and in the meantime
you can do whatever you want!

Just a couple of more things: When you're filling the input box you'll need
to press 'Enter' to submit the value you typed, because there's not 'Send'
button, and if you want to skip a captcha you can just press 'Enter' or close
the pop up using the X, leaving the input empty.

If you find CapTux useful, I'd be glad if you add 'darkjoker' as your
referrer on CaptchaTrader (or register following this link:
http://captchatrader.com/users/refer/darkjoker/ )

Bye bye,
darkjoker
